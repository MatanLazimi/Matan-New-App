import 'package:freezed_annotation/freezed_annotation.dart';

part 'broker_manage_model.freezed.dart';
part 'broker_manage_model.g.dart';

// model class for crop
@freezed
class BrokerManageModel with _$BrokerManageModel {
  const BrokerManageModel._();
  const factory BrokerManageModel({
    int? o,
    String? bn,
    double? md,
    String? mdcmnt,
    bool? da,
    String? in_,
    int? bo,
    String? os,
    int? noe,
    String? ad,
    String? bs,
    bool? auc,
    String? ph,
    String? fa,
    String? em,
    bool? mt,
    String? mtcmnt,
    bool? wbt,
    String? wbtcmnt,
    bool? api,
    String? apicmnt,
    bool? oco,
    String? ococmnt,
    bool? tof,
    String? tofcmnt,
    bool? hedg,
    String? hedgcmnt,
    bool? tlst,
    String? tlstcmnt,
    bool? oct,
    String? octcmnt,
    bool? bon,
    String? boncmnt,
    bool? cont,
    String? contcmnt,
    int? maxl,
    String? maxlcmnt,
    double? mlot,
    String? mlotcmnt,
    double? maxlot,
    String? maxlotcmnt,
    double? comi,
    String? comicmnt,
    bool? sfa,
    String? sfacmnt,
    bool? sega,
    String? segacmnt,
    bool? iom,
    String? iomcmnt,
    bool? mnga,
    String? mngacmnt,
    String? gi,
    String? tpt,
    String? mau,
    String? afmm,
    String? afmmcmnt,
    String? deci,
    String? scalA,
    String? scalAcmnt,
    String? lu,
    String? sl,
    String? tp,
    String? pct,
    String? rt,
    String? bt,
    String? ac,
    String? at,
    String? ecnS,
    String? it,
    String? fwm,
  }) = _BrokerManageModel;

  factory BrokerManageModel.fromJson(Map<String, Object?> json) =>
      _$BrokerManageModelFromJson(json);
}
